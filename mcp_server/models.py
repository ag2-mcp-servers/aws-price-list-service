# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T13:02:35+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, List, Optional

from pydantic import BaseModel, Field, RootModel, conint, constr


class AccessDeniedException(RootModel[Any]):
    root: Any


class BoxedInteger(RootModel[conint(ge=1, le=100)]):
    root: conint(ge=1, le=100)


class CurrencyCode(RootModel[constr(pattern=r'^[A-Z]{3}$')]):
    root: constr(pattern=r'^[A-Z]{3}$')


class EffectiveDate(RootModel[datetime]):
    root: datetime


class ExpiredNextTokenException(RootModel[Any]):
    root: Any


class FileFormat(RootModel[constr(min_length=1, max_length=255)]):
    root: constr(min_length=1, max_length=255)


class FileFormats(RootModel[List[FileFormat]]):
    root: List[FileFormat]


class FilterType(Enum):
    TERM_MATCH = 'TERM_MATCH'


class InternalErrorException(RootModel[Any]):
    root: Any


class InvalidNextTokenException(RootModel[Any]):
    root: Any


class InvalidParameterException(RootModel[Any]):
    root: Any


class MaxResults(RootModel[conint(ge=1, le=100)]):
    root: conint(ge=1, le=100)


class NotFoundException(RootModel[Any]):
    root: Any


class PriceListArn(
    RootModel[
        constr(
            pattern=r'^arn:.+:pricing::.*:price-list/.{1,255}/.{1,32}/[A-Z]{3}/[0-9]{14}/[^/]*$',
            min_length=18,
            max_length=2048,
        )
    ]
):
    root: constr(
        pattern=r'^arn:.+:pricing::.*:price-list/.{1,255}/.{1,32}/[A-Z]{3}/[0-9]{14}/[^/]*$',
        min_length=18,
        max_length=2048,
    )


class PriceListJsonItem(RootModel[str]):
    root: str


class PriceListJsonItems(RootModel[List[PriceListJsonItem]]):
    root: List[PriceListJsonItem]


class RegionCode(RootModel[constr(min_length=1, max_length=255)]):
    root: constr(min_length=1, max_length=255)


class ServiceCode(RootModel[constr(min_length=1, max_length=32)]):
    root: constr(min_length=1, max_length=32)


class String(RootModel[str]):
    root: str


class XAmzTarget(Enum):
    AWSPriceListService_DescribeServices = 'AWSPriceListService.DescribeServices'


class XAmzTarget1(Enum):
    AWSPriceListService_GetAttributeValues = 'AWSPriceListService.GetAttributeValues'


class XAmzTarget2(Enum):
    AWSPriceListService_GetPriceListFileUrl = 'AWSPriceListService.GetPriceListFileUrl'


class XAmzTarget3(Enum):
    AWSPriceListService_GetProducts = 'AWSPriceListService.GetProducts'


class XAmzTarget4(Enum):
    AWSPriceListService_ListPriceLists = 'AWSPriceListService.ListPriceLists'


class AttributeNameList(RootModel[List[String]]):
    root: List[String]


class AttributeValue(BaseModel):
    Value: Optional[String] = None


class AttributeValueList(RootModel[List[AttributeValue]]):
    root: List[AttributeValue]


class DescribeServicesRequest(BaseModel):
    FormatVersion: Optional[String] = None
    MaxResults: Optional[BoxedInteger] = None
    NextToken: Optional[String] = None
    ServiceCode: Optional[String] = None


class Filter(BaseModel):
    Field: String
    Type: FilterType
    Value: String


class Filters(RootModel[List[Filter]]):
    root: List[Filter]


class GetAttributeValuesRequest(BaseModel):
    AttributeName: String
    MaxResults: Optional[BoxedInteger] = None
    NextToken: Optional[String] = None
    ServiceCode: String


class GetAttributeValuesResponse(BaseModel):
    AttributeValues: Optional[AttributeValueList] = None
    NextToken: Optional[String] = None


class GetPriceListFileUrlRequest(BaseModel):
    FileFormat_1: FileFormat = Field(..., alias='FileFormat')
    PriceListArn_1: PriceListArn = Field(..., alias='PriceListArn')


class GetPriceListFileUrlResponse(BaseModel):
    Url: Optional[String] = None


class GetProductsRequest(BaseModel):
    Filters_1: Optional[Filters] = Field(None, alias='Filters')
    FormatVersion: Optional[String] = None
    MaxResults: Optional[BoxedInteger] = None
    NextToken: Optional[String] = None
    ServiceCode: String


class GetProductsResponse(BaseModel):
    FormatVersion: Optional[String] = None
    NextToken: Optional[String] = None
    PriceList: Optional[PriceListJsonItems] = None


class ListPriceListsRequest(BaseModel):
    CurrencyCode_1: CurrencyCode = Field(..., alias='CurrencyCode')
    EffectiveDate_1: EffectiveDate = Field(..., alias='EffectiveDate')
    MaxResults_1: Optional[MaxResults] = Field(None, alias='MaxResults')
    NextToken: Optional[String] = None
    RegionCode_1: Optional[RegionCode] = Field(None, alias='RegionCode')
    ServiceCode_1: ServiceCode = Field(..., alias='ServiceCode')


class PriceList(BaseModel):
    CurrencyCode_1: Optional[CurrencyCode] = Field(None, alias='CurrencyCode')
    FileFormats_1: Optional[FileFormats] = Field(None, alias='FileFormats')
    PriceListArn_1: Optional[PriceListArn] = Field(None, alias='PriceListArn')
    RegionCode_1: Optional[RegionCode] = Field(None, alias='RegionCode')


class PriceLists(RootModel[List[PriceList]]):
    root: List[PriceList]


class Service(BaseModel):
    AttributeNames: Optional[AttributeNameList] = None
    ServiceCode: String


class ServiceList(RootModel[List[Service]]):
    root: List[Service]


class DescribeServicesResponse(BaseModel):
    FormatVersion: Optional[String] = None
    NextToken: Optional[String] = None
    Services: Optional[ServiceList] = None


class ListPriceListsResponse(BaseModel):
    NextToken: Optional[String] = None
    PriceLists_1: Optional[PriceLists] = Field(None, alias='PriceLists')
